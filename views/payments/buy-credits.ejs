<!-- Pricing Table Section -->
<div class="card mb-4">
    <div class="card-body">
        <div class="text-center mb-5">
            <h2 class="mb-3">
                <i class="fas fa-coins me-2"></i>Choose Your Credit Package
            </h2>
            <p class="text-muted">Select the perfect credit package for your email verification needs</p>
        </div>
        

        
        <div class="row g-4">
            <!-- 10K Credits Package -->
            <div class="col-lg-4 col-md-6">
                <div class="pricing-card">
                    <div class="pricing-header">
                        <div class="package-icon">
                            <i class="fas fa-rocket"></i>
                        </div>
                        <h3>Starter</h3>
                        <div class="price">
                            <span class="currency">$</span>
                            <span class="amount">10</span>
                        </div>
                        <div class="credits">10,000 Credits</div>
                        <div class="price-per-credit">$0.001 per credit</div>
                    </div>
                    <div class="pricing-features">
                        <ul>
                            <li><i class="fas fa-check"></i> Perfect for small lists</li>
                            <li><i class="fas fa-check"></i> Fast verification</li>
                            <li><i class="fas fa-check"></i> CSV export</li>
                            <li><i class="fas fa-check"></i> Email support</li>
                        </ul>
                    </div>
                    <div class="pricing-action">
                        <button class="btn btn-primary w-100 buy-now-btn" data-package="10k" data-price="10" data-credits="10000">
                            <i class="fas fa-shopping-cart me-2"></i>Buy Now
                        </button>
                    </div>
                </div>
            </div>

            <!-- 50K Credits Package -->
            <div class="col-lg-4 col-md-6">
                <div class="pricing-card featured">
                    <div class="popular-badge">Most Popular</div>
                    <div class="pricing-header">
                        <div class="package-icon">
                            <i class="fas fa-crown"></i>
                        </div>
                        <h3>Professional</h3>
                        <div class="price">
                            <span class="currency">$</span>
                            <span class="amount">45</span>
                        </div>
                        <div class="credits">50,000 Credits</div>
                        <div class="price-per-credit">$0.0009 per credit</div>
                    </div>
                    <div class="pricing-features">
                        <ul>
                            <li><i class="fas fa-check"></i> Great for medium lists</li>
                            <li><i class="fas fa-check"></i> Priority processing</li>
                            <li><i class="fas fa-check"></i> Advanced reports</li>
                            <li><i class="fas fa-check"></i> Priority support</li>
                        </ul>
                    </div>
                    <div class="pricing-action">
                        <button class="btn btn-primary w-100 buy-now-btn" data-package="50k" data-price="45" data-credits="50000">
                            <i class="fas fa-shopping-cart me-2"></i>Buy Now
                        </button>
                    </div>
                </div>
            </div>

            <!-- 100K Credits Package -->
            <div class="col-lg-4 col-md-6">
                <div class="pricing-card">
                    <div class="pricing-header">
                        <div class="package-icon">
                            <i class="fas fa-gem"></i>
                        </div>
                        <h3>Enterprise</h3>
                        <div class="price">
                            <span class="currency">$</span>
                            <span class="amount">85</span>
                        </div>
                        <div class="credits">100,000 Credits</div>
                        <div class="price-per-credit">$0.00085 per credit</div>
                    </div>
                    <div class="pricing-features">
                        <ul>
                            <li><i class="fas fa-check"></i> Perfect for large lists</li>
                            <li><i class="fas fa-check"></i> Fastest processing</li>
                            <li><i class="fas fa-check"></i> Detailed analytics</li>
                            <li><i class="fas fa-check"></i> Dedicated support</li>
                        </ul>
                    </div>
                    <div class="pricing-action">
                        <button class="btn btn-primary w-100 buy-now-btn" data-package="100k" data-price="85" data-credits="100000">
                            <i class="fas fa-shopping-cart me-2"></i>Buy Now
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Loading Modal -->
<div class="modal fade" id="loadingModal" tabindex="-1" aria-labelledby="loadingModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body text-center p-4">
                <div class="spinner-border text-primary mb-3" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <h5>Preparing your checkout...</h5>
                <p class="text-muted">Please wait while we set up your payment.</p>
            </div>
        </div>
    </div>
</div>

<style>
    .pricing-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border: 2px solid rgba(255, 255, 255, 0.2);
        border-radius: var(--border-radius);
        padding: 2rem;
        text-align: center;
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
        height: 100%;
    }

    .pricing-card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: var(--primary-gradient);
    }

    .pricing-card:hover {
        transform: translateY(-8px);
        box-shadow: var(--shadow-lg);
        border-color: rgba(102, 126, 234, 0.3);
    }

    .pricing-card.featured {
        border-color: rgba(102, 126, 234, 0.5);
        transform: scale(1.05);
        box-shadow: var(--shadow-md);
    }

    .pricing-card.featured:hover {
        transform: scale(1.05) translateY(-8px);
    }

    .popular-badge {
        position: absolute;
        top: -10px;
        left: 50%;
        transform: translateX(-50%);
        background: var(--success-gradient);
        color: white;
        padding: 0.5rem 1.5rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        z-index: 10;
    }

    .package-icon {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        background: var(--primary-gradient);
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1.5rem;
        font-size: 2rem;
        color: white;
        box-shadow: var(--shadow-sm);
    }

    .pricing-header h3 {
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 1rem;
        color: #2d3748;
    }

    .price {
        margin-bottom: 0.5rem;
    }

    .price .currency {
        font-size: 1.5rem;
        font-weight: 600;
        color: #667eea;
        vertical-align: top;
    }

    .price .amount {
        font-size: 3rem;
        font-weight: 700;
        color: #667eea;
        line-height: 1;
    }

    .credits {
        font-size: 1.2rem;
        font-weight: 600;
        color: #2d3748;
        margin-bottom: 0.5rem;
    }

    .price-per-credit {
        font-size: 0.9rem;
        color: #718096;
        margin-bottom: 2rem;
    }

    .pricing-features {
        margin-bottom: 2rem;
    }

    .pricing-features ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .pricing-features li {
        padding: 0.5rem 0;
        color: #4a5568;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .pricing-features li i {
        color: #48bb78;
        margin-right: 0.5rem;
        font-weight: bold;
    }

    .pricing-action .btn {
        padding: 1rem 2rem;
        font-weight: 600;
        border-radius: var(--border-radius-sm);
    }

    @media (max-width: 768px) {
        .pricing-card.featured {
            transform: none;
        }
        
        .pricing-card.featured:hover {
            transform: translateY(-8px);
        }
    }
</style>

<!-- All JavaScript in one place -->
<script src="https://cdn.paddle.com/paddle/v2/paddle.js"></script>
<script>
    console.log('Script starting...');
    
    // Global variables
    let paddleInitialized = false;
    let loadingModal = null;
    let retryCount = 0;
    const MAX_RETRIES = 3;

    // Test function
    function testButton() {
        alert('JavaScript is working!');
        console.log('Test button clicked - JavaScript is working');
    }

    // Initialize everything when DOM is ready
    document.addEventListener('DOMContentLoaded', function() {
        console.log('DOM loaded, initializing...');
        initializePaddle();
        initializeEventListeners();
        initializeBootstrapComponents();
    });

    function initializeBootstrapComponents() {
        try {
            console.log('Initializing Bootstrap components...');
            // Initialize Bootstrap modal
            const modalElement = document.getElementById('loadingModal');
            if (modalElement) {
                loadingModal = new bootstrap.Modal(modalElement);
                console.log('✅ Bootstrap modal initialized');
            } else {
                console.error('❌ Loading modal element not found');
            }
        } catch (error) {
            console.error('Failed to initialize Bootstrap components:', error);
        }
    }

    function initializePaddle() {
        try {
            console.log('Initializing Paddle...');
            
            // Check if Paddle script is loaded
            if (typeof Paddle === 'undefined') {
                if (retryCount < MAX_RETRIES) {
                    console.warn(`Paddle not loaded yet, retrying... (${retryCount + 1}/${MAX_RETRIES})`);
                    retryCount++;
                    setTimeout(initializePaddle, 1000);
                    return;
                }
                throw new Error('Paddle script failed to load');
            }

            const sellerIdString = '<%= process.env.PADDLE_VENDOR_ID %>'; // For Paddle Billing, this is the seller ID
            const sellerId = parseInt(sellerIdString, 10);
            if (isNaN(sellerId) || !sellerIdString) {
                throw new Error('Paddle seller ID not configured or is not a valid integer');
            }

            const isProduction = '<%= process.env.NODE_ENV %>' === 'production';
            const forceSandbox = '<%= process.env.PADDLE_SANDBOX %>' === 'true';
            const environment = (isProduction && !forceSandbox) ? 'production' : 'sandbox';

            // Set environment first for Paddle Billing - explicitly using sandbox
            Paddle.Environment.set('sandbox');

            // Initialize Paddle Billing with correct method
            Paddle.Initialize({
                seller: sellerId,
                eventCallback: function(data) {
                    console.log('Paddle event:', data);
                    
                    // Handle specific events for Paddle Billing
                    if (data.name === 'checkout.completed') {
                        console.log('✅ Checkout completed:', data);
                        // Redirect to success page
                        const transactionId = data.data?.transaction_id || data.data?.id || 'unknown';
                        window.location.href = '/payments/success?transaction_id=' + transactionId;
                    }
                    
                    if (data.name === 'checkout.error') {
                        console.error('Checkout errors:', data);
                        showError('Payment error: ' + (data.data?.error?.message || JSON.stringify(data.data)));
                    }
                    
                    if (data.name === 'checkout.payment_method_selected') {
                        console.log('Payment method selected:', data);
                    }
                    
                    if (data.name === 'checkout.loaded') {
                        console.log('Checkout loaded successfully');
                    }
                    
                    if (data.name === 'checkout.closed') {
                        console.log('Checkout closed by user');
                    }
                }
            });

            // Log environment information for debugging
            console.log('🔍 Paddle Environment Debug Info:');
            console.log('- Seller ID:', sellerId);
            console.log('- Environment:', environment);
            console.log('- NODE_ENV:', '<%= process.env.NODE_ENV %>');
            console.log('- PADDLE_SANDBOX:', '<%= process.env.PADDLE_SANDBOX %>');
            console.log('- Is Production:', isProduction);

            paddleInitialized = true;
            console.log('✅ Paddle initialized successfully');

        } catch (error) {
            console.error('❌ Failed to initialize Paddle:', error);
            showError('Payment system initialization failed. Please try again later or contact support.');
        }
    }

    function showError(message) {
        // Hide loading modal if it's showing
        if (loadingModal) {
            loadingModal.hide();
        }
        
        // Show error to user
        const errorDiv = document.createElement('div');
        errorDiv.className = 'alert alert-danger alert-dismissible fade show';
        errorDiv.innerHTML = `
            <strong>Error:</strong> ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        `;
        
        // Insert at the top of the pricing table
        const pricingTable = document.querySelector('.card');
        if (pricingTable) {
            pricingTable.insertBefore(errorDiv, pricingTable.firstChild);
        }
    }

    function initializeEventListeners() {
        console.log('Initializing event listeners...');
        
        // Add click event listener to test button
        const testBtn = document.getElementById('testButton');
        if (testBtn) {
            testBtn.addEventListener('click', testButton);
            console.log('✅ Test button listener added');
        }
        
        // Add click event listeners to all buy now buttons
        const buyButtons = document.querySelectorAll('.buy-now-btn');
        console.log('Found', buyButtons.length, 'buy buttons');
        
        buyButtons.forEach((button, index) => {
            button.addEventListener('click', async function(e) {
                e.preventDefault();
                
                const packageType = this.getAttribute('data-package');
                const price = this.getAttribute('data-price');
                const credits = this.getAttribute('data-credits');
                
                console.log('Button clicked:', { packageType, price, credits });
                
                try {
                    await openPaddleCheckout(packageType, price, credits);
                } catch (error) {
                    console.error('Failed to open checkout:', error);
                    showError(error.message);
                }
            });
        });
        
        console.log('✅ Event listeners added successfully');
    }

    async function openPaddleCheckout(packageType, price, credits) {
        try {
            console.log('=== openPaddleCheckout START ===');
            console.log('Parameters:', { packageType, price, credits });
            
            // Check if Paddle is initialized
            if (!paddleInitialized) {
                throw new Error('Payment system is not initialized. Please refresh the page and try again.');
            }

            // Show loading modal
            if (loadingModal) {
                loadingModal.show();
            }

            // Create checkout session
            console.log('Creating checkout session...');
            const response = await fetch('/payments/create-paddle-checkout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    package: packageType,
                    price: price,
                    credits: credits
                })
            });

            if (!response.ok) {
                const errorText = await response.text();
                throw new Error(`Failed to create checkout: ${errorText}`);
            }

            const result = await response.json();
            console.log('Checkout session result:', result);

            if (!result.success || !result.productId) {
                throw new Error(result.error || 'Failed to create checkout session');
            }

            // Open Paddle Billing checkout
            console.log('Opening Paddle checkout with product ID:', result.productId);
            
            const checkoutData = {
                items: [
                    {
                        priceId: result.productId,
                        quantity: 1
                    }
                ],
                customData: {
                    userId: '<%= user._id %>',
                    package: packageType
                },
                customer: {
                    email: '<%= user.email %>'
                },
                settings: {
                    allowLogout: false,
                    displayMode: 'overlay',
                    theme: 'light',
                    locale: 'en'
                }
            };
            
            console.log('Checkout data:', checkoutData);
            
            try {
                Paddle.Checkout.open(checkoutData);
                console.log('Paddle checkout opened successfully');
                
                // Hide loading modal after opening checkout
                if (loadingModal) {
                    loadingModal.hide();
                }
                
            } catch (checkoutError) {
                console.error('Failed to open Paddle checkout:', checkoutError);
                throw new Error('Failed to open payment form: ' + checkoutError.message);
            }
            
        } catch (error) {
            console.error('❌ Checkout error:', error);
            if (loadingModal) {
                loadingModal.hide();
            }
            throw error;
        }
        console.log('=== openPaddleCheckout END ===');
    }
    
    console.log('✅ Script loaded successfully');
</script> 